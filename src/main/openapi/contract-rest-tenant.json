{
  "openapi": "3.0.2",
  "info": {
    "title": "Tenant Service - OpenAPI 3.0",
    "description": "Ronin Tenant Service API specification",
    "contact": {
      "email": "pecore@projectronin.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/v1/management"
    }
  ],
  "tags": [
    {
      "name": "Organization",
      "description": "Ronin Organization management"
    },
    {
      "name": "Tenant",
      "description": "Ronin Tenant management"
    }
  ],
  "paths": {
    "/organizations": {
      "post": {
        "summary": "Create Organization",
        "description": "Add a new Organization record",
        "operationId": "addOrganization",
        "tags": [
          "Organization"
        ],
        "requestBody": {
          "description": "Create a new Organization",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "v1/schemas/organization.json#/components/schemas/CreateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/organization.json#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      },
      "get": {
        "summary": "List Organizations",
        "description": "List all Organization records",
        "operationId": "getOrganizations",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            "description": "Restrict the number of results"
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "A paging token provided by a previous response."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/paged-organization-response.json#/components/schemas/PagedOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      }
    },
    "/organizations/{org_id}": {
      "get": {
        "summary": "Get an Organization",
        "description": "Fetch an Organization by ID",
        "operationId": "getOrganization",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The Organization ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/organization.json#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      },
      "put": {
        "summary": "Update an Organization",
        "description": "Perform a full replacement of an organization",
        "operationId": "putOrganization",
        "tags": [
          "Organization"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The Organization ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "v1/schemas/organization.json#/components/schemas/UpdateOrganizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/organization.json#/components/schemas/Organization"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          },
          "409": {
            "description": "Conflict: The version passed in does not match what is currently on the server"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      }
    },
    "/organizations/{org_id}/tenants": {
      "post": {
        "summary": "Create an Organization Tenant",
        "description": "Add a new Tenant record to an organization",
        "operationId": "addOrganizationTenant",
        "tags": [
          "Organization",
          "Tenant"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The Organization ID"
          }
        ],
        "requestBody": {
          "description": "Create a new Tenant",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "v1/schemas/tenant.json#/components/schemas/CreateTenantRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/tenant.json#/components/schemas/Tenant"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      },
      "get": {
        "summary": "List Organization Tenants",
        "description": "List all Tenant records for an organization",
        "operationId": "getOrganizationTenants",
        "tags": [
          "Organization",
          "Tenant"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The Organization ID"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            "description": "Restrict the number of results"
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "A paging token provided by a previous response."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/paged-tenant-response.json#/components/schemas/PagedTenantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      }
    },
    "/organizations/{org_id}/tenants/{tenant_id}": {
      "get": {
        "summary": "Get an Organization Tenant",
        "description": "Fetch a Tenant by ID and Organization ID",
        "operationId": "getOrganizationTenantById",
        "tags": [
          "Organization",
          "Tenant"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The Organization ID"
          },
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/tenant.json#/components/schemas/Tenant"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      },
      "delete":{
        "summary": "Delete an Organization Tenant",
        "description": "Delete a Tenant by ID and Organization ID",
        "operationId": "deleteOrganizationTenantById",
        "tags": [
          "Organization",
          "Tenant"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "org_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The Organization ID"
          },
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/tenant.json#/components/schemas/DeleteTenantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      }
    },
    "/tenants": {
      "get": {
        "summary": "List all Tenants",
        "description": "List all Tenant records",
        "operationId": "getTenants",
        "tags": [
          "Tenant"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            "description": "Restrict the number of results"
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0
            },
            "description": "A paging token provided by a previous response."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/paged-tenant-response.json#/components/schemas/PagedTenantResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      }
    },
    "/tenants/{tenant_id}": {
      "get": {
        "summary": "Get a tenant",
        "description": "Fetch a Tenant by ID",
        "operationId": "getTenant",
        "tags": [
          "Tenant"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenant_id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Tenant ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "v1/schemas/tenant.json#/components/schemas/Tenant"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Not Authorized"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "seki": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "seki": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
